(program (statement1 (statement { (statelist (statement { (statelist (statement (vardecl (vartype float) x brackets) ;) (statelist1 (statelist (statement (vardecl (vartype float) z brackets) ;) (statelist1 (statelist (statement (vardecl (vartype int) i brackets) ;) (statelist1 (statelist (statement (vardecl (vartype int) max brackets) ;) (statelist1 (statelist (statement (atribstat (lvalue x bracketexpress) = (atribexpress (expression (numexpression (term (unaryexpr arithsignal3 (factor 0)) arithmetic2) arithmetic1) expression1))) ;) (statelist1 (statelist (statement (atribstat (lvalue max bracketexpress) = (atribexpress (expression (numexpression (term (unaryexpr arithsignal3 (factor 10000)) arithmetic2) arithmetic1) expression1))) ;) (statelist1 (statelist (statement (forstat for ( (atribstat (lvalue i bracketexpress) = (atribexpress (expression (numexpression (term (unaryexpr arithsignal3 (factor 1)) arithmetic2) arithmetic1) expression1))) ; (expression (numexpression (term (unaryexpr arithsignal3 (factor (lvalue i bracketexpress))) arithmetic2) arithmetic1) (expression1 (signal <=) (numexpression (term (unaryexpr arithsignal3 (factor (lvalue max bracketexpress))) arithmetic2) arithmetic1))) ; (atribstat (lvalue i bracketexpress) = (atribexpress (expression (numexpression (term (unaryexpr arithsignal3 (factor (lvalue i bracketexpress))) arithmetic2) (arithmetic1 (arithsignal1 +) (term (unaryexpr arithsignal3 (factor 1)) arithmetic2))) expression1))) ) (statement { (statelist (statement (printstat print (expression (numexpression (term (unaryexpr arithsignal3 (factor (lvalue x bracketexpress))) arithmetic2) arithmetic1) expression1)) ;) (statelist1 (statelist (statement (atribstat (lvalue x bracketexpress) = (atribexpress (expression (numexpression (term (unaryexpr arithsignal3 (factor (lvalue x bracketexpress))) arithmetic2) (arithmetic1 (arithsignal1 +) (term (unaryexpr arithsignal3 (factor 0.001)) arithmetic2))) expression1))) ;) (statelist1 (statelist (statement (atribstat (lvalue z bracketexpress) = (atribexpress (expression (numexpression (term (unaryexpr arithsignal3 (factor (lvalue x bracketexpress))) arithmetic2) arithmetic1) expression1))) ;) (statelist1 (statelist (statement (ifstat if ( (expression (numexpression (term (unaryexpr arithsignal3 (factor (lvalue z bracketexpress))) arithmetic2) arithmetic1) (expression1 (signal !=) (numexpression (term (unaryexpr arithsignal3 (factor (lvalue x bracketexpress))) arithmetic2) arithmetic1))) ) (statement { (statelist (statement (printstat print (expression (numexpression (term (unaryexpr arithsignal3 (factor "Erro_numerico_na_atribuicao_de_numeros_na_notacao_ponto_flutuante!")) arithmetic2) arithmetic1) expression1)) ;) (statelist1 (statelist (statement break ;) statelist1))) }) elsestat)) statelist1))))))) }))) statelist1))))))))))))) }) (statelist1 (statelist (statement { (statelist (statement (vardecl (vartype int) y brackets) ;) (statelist1 (statelist (statement (vardecl (vartype int) j brackets) ;) (statelist1 (statelist (statement (vardecl (vartype int) i brackets) ;) (statelist1 (statelist (statement (atribstat (lvalue y bracketexpress) = (atribexpress (allocexpression new (vartype int) [ (expression (numexpression (term (unaryexpr arithsignal3 (factor 10)) arithmetic2) arithmetic1) expression1) ] bracketexpress))) ;) (statelist1 (statelist (statement (atribstat (lvalue j bracketexpress) = (atribexpress (expression (numexpression (term (unaryexpr arithsignal3 (factor 0)) arithmetic2) arithmetic1) expression1))) ;) (statelist1 (statelist (statement (forstat for ( (atribstat (lvalue i bracketexpress) = (atribexpress (expression (numexpression (term (unaryexpr arithsignal3 (factor 0)) arithmetic2) arithmetic1) expression1))) ; (expression (numexpression (term (unaryexpr arithsignal3 (factor (lvalue i bracketexpress))) arithmetic2) arithmetic1) (expression1 (signal <) (numexpression (term (unaryexpr arithsignal3 (factor 20)) arithmetic2) arithmetic1))) ; (atribstat (lvalue i bracketexpress) = (atribexpress (expression (numexpression (term (unaryexpr arithsignal3 (factor (lvalue i bracketexpress))) arithmetic2) (arithmetic1 (arithsignal1 +) (term (unaryexpr arithsignal3 (factor 1)) arithmetic2))) expression1))) ) (statement (ifstat if ( (expression (numexpression (term (unaryexpr arithsignal3 (factor (lvalue i bracketexpress))) (arithmetic2 (arithsignal2 %) (unaryexpr arithsignal3 (factor 2)))) arithmetic1) (expression1 (signal ==) (numexpression (term (unaryexpr arithsignal3 (factor 0)) arithmetic2) arithmetic1))) ) (statement { (statelist (statement (atribstat (lvalue y (bracketexpress [ (expression (numexpression (term (unaryexpr arithsignal3 (factor (lvalue j bracketexpress))) arithmetic2) arithmetic1) expression1) ])) = (atribexpress (expression (numexpression (term (unaryexpr arithsignal3 (factor (lvalue i bracketexpress))) arithmetic2) (arithmetic1 (arithsignal1 +) (term (unaryexpr arithsignal3 (factor 1)) arithmetic2))) expression1))) ;) (statelist1 (statelist (statement (atribstat (lvalue j bracketexpress) = (atribexpress (expression (numexpression (term (unaryexpr arithsignal3 (factor (lvalue j bracketexpress))) arithmetic2) (arithmetic1 (arithsignal1 +) (term (unaryexpr arithsignal3 (factor 1)) arithmetic2))) expression1))) ;) statelist1))) }) (elsestat else (statement (printstat print (expression (numexpression (term (unaryexpr arithsignal3 (factor 0)) arithmetic2) arithmetic1) expression1)) ;)))))) (statelist1 (statelist (statement (forstat for ( (atribstat (lvalue i bracketexpress) = (atribexpress (expression (numexpression (term (unaryexpr arithsignal3 (factor 0)) arithmetic2) arithmetic1) expression1))) ; (expression (numexpression (term (unaryexpr arithsignal3 (factor (lvalue i bracketexpress))) arithmetic2) arithmetic1) (expression1 (signal <) (numexpression (term (unaryexpr arithsignal3 (factor 10)) arithmetic2) arithmetic1))) ; (atribstat (lvalue i bracketexpress) = (atribexpress (expression (numexpression (term (unaryexpr arithsignal3 (factor (lvalue i bracketexpress))) arithmetic2) (arithmetic1 (arithsignal1 +) (term (unaryexpr arithsignal3 (factor 1)) arithmetic2))) expression1))) ) (statement (printstat print (expression (numexpression (term (unaryexpr arithsignal3 (factor (lvalue y (bracketexpress [ (expression (numexpression (term (unaryexpr arithsignal3 (factor (lvalue i bracketexpress))) arithmetic2) arithmetic1) expression1) ])))) arithmetic2) arithmetic1) expression1)) ;))) (statelist1 (statelist (statement (returnstat return) ;) statelist1))))))))))))))) }) statelist1))) })))
