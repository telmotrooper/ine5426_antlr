Questão 1 da AS do trabalho:
CC-2019-2 está na forma BNF. Coloque-a na forma convencional de gramática. Chame
tal gramática de CCC-2019-2.

Forma convencional:


PROGRAM         -> STATEMENT1
STATEMENT1      -> STATEMENT | ε
STATEMENT       -> VARDECL; | ATRIBSTAT; | PRINTSTAT; | READSTAT; | 
                   RETURNSTAT; | IFSTAT; | FORSTAT; | {STATELIST} | 
	           break; | ;

VARDECL         -> TYPE ident BRACKETS
TYPE            -> int | float | string
BRACKETS        -> [int_constant] | [int_constant]BRACKETS | ε
ATRIBSTAT       -> LVALUE = ATRIBEXPRESS
ATRIBEXPRESS    -> EXPRESSION | ALLOCEXPRESSION
PRINTSTAT       -> print EXPRESSION
READSTAT        -> read LVALUE
RETURNSTAT      -> return
IFSTAT          -> if (EXPRESSION) STATEMENT ELSESTAT
ELSESTAT        -> else STATEMENT | ε
FORSTAT         -> for(ATRIBSTAT; EXPRESSION; ATRIBSTAT) STATEMENT
STATELIST       -> STATEMENT STATELIST1
STATELIST1      -> STATELIST | ε
ALLOCEXPRESSION -> new TYPE [EXPRESSION]BRACKETEXPRESS
BRACKETEXPRESS  -> [EXPRESSION] | [EXPRESSION]BRACKETEXPRESS | ε
EXPRESSION      -> NUMEXPRESSION EXPRESSION1
EXPRESSION1     -> SIGNAL NUMEXPRESSION | ε
SIGNAL          -> < | > | <= | >= | == | !=
NUMEXPRESSION   -> TERM ARITHMETIC1
ARITHMETIC1     -> ARITHSIGNAL1 TERM | ARITHSIGNAL1 TERM ARITHMETIC1
ARITHSIGNAL1    -> + | -
TERM            -> UNARYEXPR ARITHMETIC2
ARITHMETIC2     -> ARITHSIGNAL2 UNARYEXPR | ARITHSIGNAL2 UNARYEXPR ARITHMETIC2
ARITHSIGNAL2    -> * | \ | %
UNARYEXPR       -> ARITHSIGNAL1' FACTOR
ARITHSIGNAL1'   -> ARITHSIGNAL1 | ε
FACTOR          -> int_constant | float_constant | string_constant |
		   null | LVALUE | (EXPRESSION)
LVALUE          -> ident BRACKETEXPRESS

